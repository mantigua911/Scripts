
## IT Password Expiration Remainder for User Jef D.
##Code is in Testing mode - to be used clear out comments

#Prompt User to run as Administrastor
if (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator"))  
{  
  $arguments = "& '" +$myinvocation.mycommand.definition + "'"
  Start-Process powershell -Verb runAs -ArgumentList $arguments
  Break
}

 #Gets the Default Domain Password Policy in days
 $MaxPasswordAge=(Get-ADDefaultDomainPasswordPolicy).MaxPasswordAge
 #Container for Expired password users
 $Report = @()
 #Creates a Default date from days that is runned for 2 weeks, 7 days and 3 days to compare to the Expiry Date
 $TwoWeeksWarnDate = (get-date).adddays(58).Date
 $SevenDayWarnDate = (get-date).adddays(7).Date
 $ThreeDayWarnDate = (get-date).adddays(3).Date

 #Mail Receiver for IT report
 $MailTo = "jdiaz@911memorial.org"
 
 
 #User for testing
 #$Users = Get-ADUser -Identity jjerome -Properties *
 #$Users = 'jdiaz', 'jjerome'| ForEach-Object {  Get-ADUser -Identity $_ -Properties *}
 $Users = 'jdiaz', 'jvalensoy', 'shey', 'jjerome', 'mantigua'| ForEach-Object {  Get-ADUser -Identity $_ -Properties *}

 #Get all AD user who are enabled, passwords can expire, has at least changed their password once and users with passwords that have and have not expired 
 #$Users = Get-ADUser -Filter * -Properties * | Where-Object {($_.Enabled -eq $true) -and ($_.PasswordNeverExpires -eq $false) -and ($_.PasswordExpired -eq $false) -and ($_.PasswordLastSet -gt 0)}
 #$Users = Get-ADUser -Filter * -Properties * | Where-Object {($_.Enabled -eq $true) -and ($_.PasswordNeverExpires -eq $false) -and ($_.PasswordLastSet -gt 0) -and {($_.PasswordExpired -eq $true) -or ($_.PasswordExpired -eq $false)}}  

 
 foreach($user in $Users){
 try{
 #Storing all the date required from each user
    $Name = "$($user.givenname) $($user.Surname)"
    $Email =$user.EmailAddress
    $PasswordSetOn=$user.PasswordLastSet
    $ExpiryDate=$PasswordSetOn+$MaxPasswordAge
    $Today=Get-Date
    $DaysLeft=(New-TimeSpan -Start $Today.Date -End $ExpiryDate.Date).Days
    $ExpiredDate=$Today.AddDays(-7).Date

    #Email Body in HTML Format Sent to users
    $body = 
@"
    <html>
    <body>
    <br>
    Dear $Name,<br>
    <br>
    <p>
    We hope this email finds you well. This is an automated message from The National Setptember 11th Memorial & Museum IT Department to remind you that your password will expire soon.
    As part of our ongoing efforts to ensure the security of your account, we require all users to update their passwords regularly.
    Please be aware that your password will expire on $ExpiryDate. You have <b>$DaysLeft</b> Days left to update it.
    We recommend that you change your password from your personalized Microsoft office portal or by using the CTRL+ALT+DEL option if you are signed in to an office computer.
    </p>
    <br>
    <b>Your new password must meet our current security criterias</b>.
    <br>
    <ul style="list-style-type:square;">
    <li>Minimun of 15 characters</li>
    <li>One uppercase letter</li>
    <li>One number</li>
    <li>One special character</li>
    <li>Cannot be similar to your previous 20 used passwords</li>
    </ul>
    <br>
    <p>
    Should you encounter any difficulties or have questions, our support team is available to assist you. Please Email the helpdesk if you need assistance changing your password. <b>DO NOT REPLY TO THIS EMAIL</b>.
    Thank you for your attention to this matter and your cooperation in maintaining the security of our platform.
    Remember to not share or re-use or share your tooth brush.
    </p>
    <br>
    Best regards,<br>
    The National Setptember 11th Memorial & Museum IT Department<br>
    <br>
    </body>
    </html>
"@
    #Email Body in HTML Format Sent to IT
    $body2 = 
@"
    <html>
    <body>
    <br>
    <br>
    Hi IT,<br>
    <br>
    <p>
    This is an automated message from the National Setptember 11th Memorial & Museum.<br>
    The following list of users have expired passwords.
    </p>
    $Report
    <br>
    </body>
    </html>
"@
     
   


     #Check to see if the expiry date matches the warn date
     if ($ExpiryDate.Date -eq $TwoWeeksWarnDate) {
            #Send-Mailmessage -smtpServer '10.0.62.75' -Port 25 -from 'Automated Reminder <noReply@911memorial.org>' -to $Email -subject "Password Expiry test" -body $body -bodyasHTML -priority High -ErrorAction Stop -ErrorVariable err
            Write-Host "Name:" $Name, "Email:" $Email, "Password Last set:" $PasswordSetOn, "Expiration Date:" $ExpiryDate.Date, "Days Left:" $DaysLeft
            Write-Host "--------------14------------"
        }
        elseif ($ExpiryDate.Date -eq $SevenDayWarnDate) {
            #Send-Mailmessage -smtpServer '10.0.62.75' -Port 25 -from 'Automated Reminder <noReply@911memorial.org>' -to $Email -subject "Password Expiry test-2" -body $body -bodyasHTML -priority High -ErrorAction Stop -ErrorVariable err
            Write-Host "Name:" $Name, "Email:" $Email, "Password Last set:" $PasswordSetOn, "Expiration Date:" $ExpiryDate.Date, "Days Left:" $DaysLeft
            Write-Host "--------------7------------"
        }
        elseif ($ExpiryDate.Date -eq $ThreeDayWarnDate) {
            #Send-Mailmessage -smtpServer '10.0.62.75' -Port 25 -from 'Automated Reminder <noReply@911memorial.org>' -to $Email -subject "Password Expiry test-3" -body $body -bodyasHTML -priority High -ErrorAction Stop -ErrorVariable err
            Write-Host "Name:" $Name, "Email:" $Email, "Password Last set:" $PasswordSetOn, "Expiration Date:" $ExpiryDate.Date, "Days Left:" $DaysLeft
            Write-Host "--------------3------------"
            #$Report += "$($user.givenname) $($user.Surname)"
            }
        elseif (($ExpiryDate.Date -ge $ExpiredDate.Date) -and ($DaysLeft -ile -1)) {
            Write-Host "Name:" $Name, "Email:" $Email, "Password Last set:" $PasswordSetOn, "Expiration Date:" $ExpiryDate.Date, "Days Left:" $DaysLeft
            #Write-Host "-----------Expired----------"
            $Report += "$($user.givenname) $($user.Surname),"
            }
        
  
       }
       #Prompt is there was an error when sending the email
     catch{
         write-host "Error: Failed to Send Email to $Email "
          }}

          #send Report email to IT with list of users with expired passwords
          #Send-Mailmessage -smtpServer '10.0.62.75' -Port 25 -from 'Automated Reminder <noReply@911memorial.org>' -to $MailTo -subject "Expired Password Accounts" -body $body2 -bodyasHTML -priority High -ErrorAction Stop -ErrorVariable err